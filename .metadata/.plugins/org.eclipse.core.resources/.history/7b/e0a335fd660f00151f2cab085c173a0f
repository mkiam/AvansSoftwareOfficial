package controllers;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.node.ObjectNode;

import java.util.ArrayList;
import java.util.List;

import controllers.Application.Login;
import play.data.DynamicForm;
import play.data.Form;
import play.libs.Json;
import play.mvc.*;
import views.html.index;
import static play.data.Form.*;
import models.*;


@Security.Authenticated(Secured.class)
public class Recipes extends Controller {
	public static Result add() {
		DynamicForm form = form().bindFromRequest();
	    String first ="";
	    if(form.data().get("fichier[]") != null)
	    first = form.data().get("fichier[]").toString();
		//Recipe recipe = Form.form(Recipe.class).bindFromRequest().get();
       // recipe.assignedTo= new Person(form().bindFromRequest().get("assignedTo"));
       // recipe.name=form().bindFromRequest().get("name");
       // recipe.ingredients=form().bindFromRequest().get("fichier[]");
        
       // recipe.save();
       // recipe.saveManyToManyAssociations("ingredients");

	  /*  Recipe newRecipe = Recipe.create(
	    		form().bindFromRequest().get("name"),
	        form().bindFromRequest().get("assignedTo"),
	       form().bindFromRequest().get("fichier[]")
	    );*/
	    return Recipes.ok(first+"is cooretly saved");
	}
	public static Result rename(Long recipe) {
	    
	        return ok(
	            Recipe.rename(
	                recipe,
	                form().bindFromRequest().get("name")
	            )
	        );
	    	}
	public static Result delete(Long recipe) {
	        Recipe.find.ref(recipe).delete();
	        return ok();
	   
	}
	
	
	
	@BodyParser.Of(BodyParser.Json.class)
	public static Result sayHello() {
		Form<Recipe> recipe = Form.form(Recipe.class).bindFromRequest();
    	Recipe newRecipe= new Recipe(recipe.get().name, Person.find.byId(session("Login")), recipe.get().ingredients);
    	newRecipe.save();
    	String name= newRecipe.name;
    	String ingredients= newRecipe.ingredients;
    	String sucess;
	  JsonNode json = request().body().asJson();
	  ObjectNode result = Json.newObject();
	  sucess= json.findPath("name").textValue();
	 
	  if(sucess== null) {
	    result.put("status", "KO");
	    result.put("message", "Missing parameter [name]");
	    return badRequest(result);
	  } else {
	    result.put("status", "OK");
	    result.put("message", "Hello " + name+ingredients);
	    return ok(result);
	  }
	}


}